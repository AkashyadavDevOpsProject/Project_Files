---
apiVersion: v1
kind: Namespace
metadata:
  name: springboot-ibm-payment
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: springappconfig
  namespace: springboot-ibm-payment
data:
  MONGODBUSERNAME: admin
---
apiVersion: v1
kind: Secret
metadata:
  name: springappsecreat
  namespace: springboot-ibm-payment
type: Opaque
stringData:
  MONGODBPASSWORD: root
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongopvc
  namespace: springboot-ibm-payment
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodbc-deployment
  namespace: springboot-ibm-payment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      volumes:
      - name: mongodbvolume
        persistentVolumeClaim:
          claimName: mongopvc
      containers:
      - name: mongodb
        image: mongo
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            configMapKeyRef:
              name: springappconfig
              key: MONGODBUSERNAME
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: springappsecreat
              key: MONGODBPASSWORD
        - name: MONGO_DB_HOSTNAME
          value: mongodbsvc
        resources:
          requests:
            cpu: "300m"
            memory: "450Mi"
          limits:
            cpu: "500m"
            memory: "550Mi"
        volumeMounts:
        - name: mongodbvolume
          mountPath: /data/db
---
apiVersion: v1
kind: Service
metadata:
  name: mongodbsvc
  namespace: springboot-ibm-payment
spec:
  selector:
    app: mongo
  ports:
  - port: 27017
    targetPort: 27017
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: springboot-deployment
  namespace: springboot-ibm-payment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: springboot
  template:
    metadata:
      labels:
        app: springboot
    spec:
      containers:
      - name: springboot-container
        image: us-central1-docker.pkg.dev/devops-practices-2025/springbootdockerrepo/spring-boot-mongo:master-7
        ports:
        - containerPort: 8080
        env:
        - name: MONGO_DB_USERNAME
          valueFrom:
            configMapKeyRef:
              name: springappconfig
              key: MONGODBUSERNAME
        - name: MONGO_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: springappsecreat
              key: MONGODBPASSWORD
        - name: MONGO_DB_HOSTNAME
          value: mongodbsvc
        resources:
          requests:
            cpu: "300m"
            memory: "450Mi"
          limits:
            cpu: "500m"
            memory: "550Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: springboot-svc
  namespace: springboot-ibm-payment
spec:
  type: ClusterIP
  selector:
    app: springboot
  ports:
  - port: 80
    targetPort: 8080
    name: http
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: springboot-ingress
  namespace: springboot-ibm-payment
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: springboot.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: springboot-svc
            port:
              number: 80
